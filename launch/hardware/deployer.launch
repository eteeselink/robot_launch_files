<?xml version="1.0"?>
<launch>

  <!-- The node name for the deployer -->
  <arg name="NAME" default="$(anon deployer)"/>
  <!-- Orocos log level (never, fatal, critical, error, warning, info, debug, realtime) -->
  <arg name="LOG_LEVEL" default="info"/>
  <!-- Additional Orocos deployer args -->
  <arg name="DEPLOYER_ARGS" default=""/>
  <!-- Orocos target (gnulinux, xenomai, etc) -->
  <arg name="OROCOS_TARGET" default="$(optenv OROCOS_TARGET)"/>
  <!-- Path to look for dynamically-loaded plugins and components (something like /lib/orocos) -->
  <arg name="RTT_COMPONENT_PATH" default="$(env RTT_COMPONENT_PATH)"/>

  <!-- Set DEBUG to true to run in GDB (don't forget to build in Debug mode) -->
  <arg name="DEBUG" default="false"/>

  <!-- Get the machine file -->
  <include file="$(env ROBOT_BRINGUP_PATH)/machines/$(arg machine).machine" />

  <arg name="machine" default="localhost"/>

  <!-- Launch deployer -->
  <group if="$(arg DEBUG)">
	<node
		name="$(arg NAME)"
		pkg="rtt_ros" type="deployer"
		args="-l $(arg LOG_LEVEL) $(arg DEPLOYER_ARGS) --"
		output="screen"
		machine="$(arg machine)">
		<env name="OROCOS_TARGET" value="$(arg OROCOS_TARGET)"/>
		<env name="RTT_COMPONENT_PATH" value="$(arg RTT_COMPONENT_PATH)"/>
	</node>
  </group>
  <group unless="$(arg DEBUG)">
	<node
		name="hardware"
		pkg="rtt_ros" type="rttscript"
		args="-l $(arg LOG_LEVEL) $(arg DEPLOYER_ARGS) -s $(find robot_launch_files)/launch/hardware/wait_for_interrupt.ops --"
		output="log"
		respawn="true"
		machine="$(arg machine)">
		<env name="OROCOS_TARGET" value="$(arg OROCOS_TARGET)"/>
		<env name="RTT_COMPONENT_PATH" value="$(arg RTT_COMPONENT_PATH)"/>
	</node>
  </group>

  <!-- Launch ROSlogger -->
  <node name="hardwarelog" pkg="rtt_control_components" type="orocoslog2roslog.py"/>

</launch>
