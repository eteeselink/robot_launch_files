<?xml version="1.0"?>
<launch>

    <arg name="machine" default="localhost"/>
    <arg name="dynamixel_controller_args"/>

    <!-- Load controller configuration to parameter server -->
    <rosparam file="$(env ROBOT_BRINGUP_PATH)/parameters/hardware/actuators/dynamixel_joint_controllers.yaml" command="load"/>

    <node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true">
        <remap from="neck/follow_joint_trajectory" to="neck/joint_trajectory_action"/>
    </node>

    <!-- start specified joint controllers -->
    <node name="dynamixel_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="$(arg dynamixel_controller_args)"
          output="screen"/>

    <!-- Start joint trajectory meta controller -->
    <rosparam file="$(env ROBOT_BRINGUP_PATH)/parameters/hardware/actuators/neck_joint_trajectory_controller.yaml" command="load"/>
    <node name="controller_spawner_meta" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --type=meta
                neck
                neck_pan
                neck_tilt"
          output="screen"/>

    <node name="republish_dynamixel_tilt_jointstates" pkg="dynamixel_jointstate_conversion" type="republish_dynamixels_as_jointstates.py" required="true">
        <remap to="neck_tilt/state" from="dynamixel_topic"/>
    </node>

    <node name="republish_dynamixel_pan_jointstates" pkg="dynamixel_jointstate_conversion" type="republish_dynamixels_as_jointstates.py" required="true">
        <remap to="neck_pan/state" from="dynamixel_topic"/>
    </node>
</launch>
